# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" "uas" "virtio_pci" "virtio_net" "virtio_blk" "virtio_scsi" "virtio_balloon" "virtio_console" "virtio_rng"];
  # boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd" "virtio_pci" "virtio_net" "virtio_blk" "virtio_scsi" "virtio_balloon" "virtio_console" "virtio_rng"];
  boot.extraModulePackages = [];
  # "console=ttyS0"
  boot.kernelParams = ["default_hugepagesz=1G" "hugepagesz=1G" "hugepages=0" "amd_pstate=active" "amd_pstate.shared_mem=1" "brd.rd_nr=1" "brd.rd_size=11240000"];
  boot.extraModprobeConfig = ''
    options kvm_amd nested=1
    softdep nvme pre: vfio-pci
  ''; # for amd cpu

  specialisation = {
    no-nvidia.configuration = {
      hardware.nvidia.prime = {
        offload = {
          enable = true;
          enableOffloadCmd = false;
        };
        # Make sure to use the correct Bus ID values for your system!
        # intelBusId = "PCI:0:2:0";
        nvidiaBusId = "PCI:1:0:0";
        amdgpuBusId = "PCI:6:0:0"; # For AMD GPU
      };

      environment.variables = {
        # KWIN_DRM_DEVICES = "/dev/dri/card0:/dev/dri/card1";
        __EGL_VENDOR_LIBRARY_FILENAMES = "${pkgs.mesa.drivers}/share/glvnd/egl_vendor.d/50_mesa.json";
        __GLX_VENDOR_LIBRARY_NAME = "mesa";
        #VK_ICD_FILENAMES="/usr/share/vulkan/icd.d/radeon_icd.x86_64.json";
      };

      services.displayManager.sddm.settings = {
        General = {
          GreeterEnvironment = "QT_WAYLAND_SHELL_INTEGRATION=layer-shell,__EGL_VENDOR_LIBRARY_FILENAMES=${pkgs.mesa.drivers}/share/glvnd/egl_vendor.d/50_mesa.json,__GLX_VENDOR_LIBRARY_NAME=mesa";
        };
      };

      environment.systemPackages = [
        (pkgs.writeShellScriptBin "nvidia-offload" ''
          export __NV_PRIME_RENDER_OFFLOAD=1
          export __NV_PRIME_RENDER_OFFLOAD_PROVIDER=NVIDIA-G0
          export __GLX_VENDOR_LIBRARY_NAME=nvidia
          export __VK_LAYER_NV_optimus=NVIDIA_only
          export __EGL_VENDOR_LIBRARY_FILENAMES=${config.hardware.nvidia.package}/share/glvnd/egl_vendor.d/10_nvidia.json
          exec "$@"
        '')
      ];
    };
  };

  virtualisation.vfio = {
    enable = true;
    IOMMUType = "amd";
    applyACSpatch = false;
    ignoreMSRs = true;
    devices = [
      #   "10de:2684" # Graphics
      #   "10de:22ba" # Audio
      # "8086:f1a6" # nvme

      # "10de:21c4" # GTX 1650 Super
      # "10de:1aeb"
      # "10de:1aec"
      # "10de:1aed"
    ];
    blacklistNvidia = false;
  };

  hardware.mlx5 = {
    enable = true;
    enableSRIOV = true;
    interfaces = ["mlx5_0"];
  };

  swapDevices = [];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
